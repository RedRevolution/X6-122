CONSTTK const
INTTK int
IDENFR a
ASSIGN =
MINU -
INTCON 1
COMMA ,
IDENFR b
ASSIGN =
PLUS +
INTCON 2
COMMA ,
IDENFR C_3
ASSIGN =
INTCON 3
COMMA ,
IDENFR A
ASSIGN =
PLUS +
INTCON 0
COMMA ,
IDENFR B
ASSIGN =
MINU -
INTCON 0
COMMA ,
IDENFR e_E
ASSIGN =
INTCON 999
SEMICN ;
CONSTTK const
CHARTK char
IDENFR d_d1
ASSIGN =
CHARCON +
COMMA ,
IDENFR d_d2
ASSIGN =
CHARCON -
COMMA ,
IDENFR d_d3
ASSIGN =
CHARCON 1
COMMA ,
IDENFR d_d4
ASSIGN =
CHARCON A
COMMA ,
IDENFR d_d5
ASSIGN =
CHARCON a
COMMA ,
IDENFR d_d6
ASSIGN =
CHARCON _
COMMA ,
IDENFR d_d7
ASSIGN =
CHARCON *
COMMA ,
IDENFR d_d8
ASSIGN =
CHARCON /
SEMICN ;
INTTK int
IDENFR e
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
IDENFR f
COMMA ,
IDENFR A1da_d
SEMICN ;
CHARTK char
IDENFR e0
COMMA ,
IDENFR A2
COMMA ,
IDENFR B4
LBRACK [
INTCON 1516
RBRACK ]
SEMICN ;
INTTK int
IDENFR fun1
LPARENT (
INTTK int
IDENFR a1
COMMA ,
INTTK int
IDENFR a2
COMMA ,
CHARTK char
IDENFR a3
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR a
ASSIGN =
MINU -
INTCON 10
SEMICN ;
CONSTTK const
CHARTK char
IDENFR c
ASSIGN =
CHARCON c
SEMICN ;
CONSTTK const
CHARTK char
IDENFR d
ASSIGN =
CHARCON d
SEMICN ;
LBRACE {
RBRACE }
RETURNTK return
LPARENT (
IDENFR a1
PLUS +
IDENFR a2
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR fun2
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR c
COMMA ,
IDENFR d
COMMA ,
IDENFR f
SEMICN ;
CHARTK char
IDENFR ee
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR c
COMMA ,
IDENFR d
COMMA ,
IDENFR ee
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR f
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON hello world!
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
PLUS +
IDENFR c
MULT *
IDENFR d
MINU -
IDENFR c
PLUS +
IDENFR e
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON hello world
COMMA ,
MINU -
IDENFR a
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
IDENFR fun3
LPARENT (
CHARTK char
IDENFR ddd
RPARENT )
LBRACE {
IDENFR fun2
LPARENT (
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR fun2
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun1
LPARENT (
INTCON 5
COMMA ,
INTCON 3
COMMA ,
CHARCON 2
RPARENT )
SEMICN ;
RBRACE }
