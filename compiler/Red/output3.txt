INTTK int
IDENFR fun1
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
MINU -
INTCON 0
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR fun
LPARENT (
INTTK int
IDENFR t
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR a1
ASSIGN =
INTCON 5
COMMA ,
IDENFR a2
ASSIGN =
INTCON 4
SEMICN ;
INTTK int
IDENFR b
COMMA ,
IDENFR a
COMMA ,
IDENFR c
LBRACK [
INTCON 11
RBRACK ]
COMMA ,
IDENFR fd
LBRACK [
INTCON 484
RBRACK ]
SEMICN ;
CHARTK char
IDENFR d
SEMICN ;
IDENFR d
ASSIGN =
CHARCON 4
SEMICN ;
IFTK if
LPARENT (
IDENFR d
GEQ >=
CHARCON E
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR d
LEQ <=
CHARCON E
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR a
NEQ !=
IDENFR a1
RPARENT )
LBRACE {
IDENFR b
ASSIGN =
IDENFR a1
PLUS +
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR b
ASSIGN =
IDENFR a2
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
EQL ==
INTCON 1
RPARENT )
LBRACE {
RBRACE }
IFTK if
LPARENT (
IDENFR a
RPARENT )
LBRACE {
RBRACE }
ELSETK else
LBRACE {
RBRACE }
WHILETK while
LPARENT (
IDENFR b
LEQ <=
IDENFR a1
RPARENT )
LBRACE {
IDENFR b
ASSIGN =
IDENFR b
PLUS +
INTCON 1
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR a
MINU -
INTCON 1
RPARENT )
LBRACE {
RBRACE }
DOTK do
LBRACE {
IDENFR b
ASSIGN =
IDENFR b
PLUS +
INTCON 1
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR a
MINU -
INTCON 1
RPARENT )
DOTK do
LBRACE {
IDENFR b
ASSIGN =
IDENFR b
MINU -
INTCON 1
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR b
GRE >
INTCON 0
RPARENT )
FORTK for
LPARENT (
IDENFR b
ASSIGN =
IDENFR a2
SEMICN ;
IDENFR b
LSS <
IDENFR a1
SEMICN ;
IDENFR b
ASSIGN =
IDENFR b
PLUS +
INTCON 1
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
SEMICN ;
RBRACE }
FORTK for
LPARENT (
IDENFR b
ASSIGN =
IDENFR a2
SEMICN ;
INTCON 0
SEMICN ;
IDENFR b
ASSIGN =
IDENFR b
MINU -
INTCON 1
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
RBRACE }
IDENFR b
ASSIGN =
LPARENT (
IDENFR b
MINU -
INTCON 1
RPARENT )
DIV /
LPARENT (
INTCON 2
MULT *
INTCON 4
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR b
GRE >
INTCON 0
RPARENT )
RETURNTK return
LPARENT (
IDENFR b
RPARENT )
SEMICN ;
ELSETK else
RETURNTK return
LPARENT (
IDENFR fun1
LPARENT (
RPARENT )
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR fun
LPARENT (
IDENFR fun1
LPARENT (
RPARENT )
RPARENT )
SEMICN ;
RBRACE }
