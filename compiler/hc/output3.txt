INTTK int
IDENFR integer1
COMMA ,
IDENFR array1
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
CHARTK char
IDENFR char2
COMMA ,
IDENFR array2
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
INTTK int
IDENFR AplusB
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR tempc
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR temp
SEMICN ;
INTTK int
IDENFR temp2
SEMICN ;
RETURNTK return
LPARENT (
IDENFR a
PLUS +
IDENFR b
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR AminusB
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
INTTK int
IDENFR temp
SEMICN ;
RETURNTK return
LPARENT (
IDENFR a
MINU -
IDENFR b
RPARENT )
SEMICN ;
RBRACE }
CHARTK char
IDENFR caPluscb
LPARENT (
CHARTK char
IDENFR ca
COMMA ,
CHARTK char
IDENFR cb
RPARENT )
LBRACE {
IFTK if
LPARENT (
MINU -
IDENFR ca
PLUS +
IDENFR cb
PLUS +
INTCON 3
MINU -
CHARCON a
GRE >
INTCON 0
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
CHARCON a
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
RETURNTK return
LPARENT (
CHARCON b
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR char2
ASSIGN =
CHARCON d
SEMICN ;
IDENFR array2
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR caPluscb
LPARENT (
IDENFR char2
COMMA ,
IDENFR char2
RPARENT )
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON _
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON a
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON b
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON c
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON e
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON f
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON g
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON h
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON i
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON j
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON k
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON l
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON m
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON n
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON o
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON p
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON q
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON r
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON s
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON t
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON u
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON v
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON w
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON x
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON y
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON z
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON A
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON B
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON C
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON D
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON E
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON F
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON G
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON H
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON I
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON J
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON K
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON L
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON M
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON N
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON O
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON P
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON Q
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON R
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON S
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON T
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON U
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON V
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON W
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON X
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON Y
SEMICN ;
IDENFR char2
ASSIGN =
CHARCON Z
SEMICN ;
RBRACE }
