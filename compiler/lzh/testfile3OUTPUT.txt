INTTK int
IDENFR var_int
LBRACK [
INTCON 5
RBRACK ]
COMMA ,
IDENFR var_int2
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
CHARTK char
IDENFR var_char
COMMA ,
IDENFR varchar
LBRACK [
INTCON 111
RBRACK ]
SEMICN ;
INTTK int
IDENFR func1
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
INTCON 2
RPARENT )
SEMICN ;
RBRACE }
CHARTK char
IDENFR func3
LPARENT (
CHARTK char
IDENFR ch
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
IDENFR ch
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR func2
LPARENT (
INTTK int
IDENFR tmp
RPARENT )
LBRACE {
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON hello%d
COMMA ,
IDENFR var_int
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON world
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR var_int
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CHARTK char
IDENFR b
SEMICN ;
INTTK int
IDENFR a
SEMICN ;
INTTK int
IDENFR c
SEMICN ;
IDENFR b
ASSIGN =
CHARCON +
SEMICN ;
FORTK for
LPARENT (
IDENFR a
ASSIGN =
INTCON 0
SEMICN ;
IDENFR a
LSS <
INTCON 3
SEMICN ;
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
RPARENT )
LBRACE {
IDENFR var_int
LBRACK [
IDENFR a
RBRACK ]
ASSIGN =
IDENFR a
MULT *
INTCON 128
DIV /
INTCON 3
SEMICN ;
IDENFR c
ASSIGN =
IDENFR a
SEMICN ;
IFTK if
LPARENT (
IDENFR a
EQL ==
INTCON 2
RPARENT )
LBRACE {
IDENFR c
ASSIGN =
IDENFR c
PLUS +
INTCON 6
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR c
ASSIGN =
IDENFR c
PLUS +
INTCON 7
SEMICN ;
RBRACE }
RBRACE }
FORTK for
LPARENT (
IDENFR a
ASSIGN =
INTCON 0
SEMICN ;
IDENFR a
NEQ !=
MINU -
INTCON 5
SEMICN ;
IDENFR a
ASSIGN =
IDENFR a
MINU -
INTCON 1
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
MINU -
INTCON 1
PLUS +
LPARENT (
PLUS +
INTCON 5
RPARENT )
SEMICN ;
RBRACE }
IDENFR func2
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
IDENFR func1
LPARENT (
RPARENT )
SEMICN ;
IDENFR a
ASSIGN =
IDENFR a
MULT *
IDENFR var_int
LBRACK [
IDENFR a
RBRACK ]
MULT *
LPARENT (
PLUS +
IDENFR a
PLUS +
INTCON 1
RPARENT )
MULT *
INTCON 4
MULT *
CHARCON +
MULT *
IDENFR func1
LPARENT (
RPARENT )
SEMICN ;
RBRACE }
