CONSTTK const
INTTK int
IDENFR constint
ASSIGN =
INTCON 0
SEMICN ;
CONSTTK const
INTTK int
IDENFR constint1
ASSIGN =
MINU -
INTCON 1
COMMA ,
IDENFR constint2
ASSIGN =
MINU -
INTCON 340
SEMICN ;
CONSTTK const
CHARTK char
IDENFR constchar
ASSIGN =
CHARCON *
SEMICN ;
CONSTTK const
CHARTK char
IDENFR constchar1
ASSIGN =
CHARCON a
COMMA ,
IDENFR constchar2
ASSIGN =
CHARCON 5
SEMICN ;
INTTK int
IDENFR varint
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
INTTK int
IDENFR varchar
SEMICN ;
INTTK int
IDENFR func1
LPARENT (
INTTK int
IDENFR num
COMMA ,
CHARTK char
IDENFR ch
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
IDENFR constint
MULT *
IDENFR num
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR func2
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON hello
COMMA ,
IDENFR constint
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON world
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %c
COMMA ,
IDENFR constchar
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR func3
LPARENT (
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR a
ASSIGN =
INTCON 4
SEMICN ;
CHARTK char
IDENFR b
SEMICN ;
IDENFR b
ASSIGN =
CHARCON -
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR b
RPARENT )
SEMICN ;
IDENFR varchar
ASSIGN =
MINU -
IDENFR a
MINU -
IDENFR constint1
SEMICN ;
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON done
COMMA ,
IDENFR constint
RPARENT )
SEMICN ;
RBRACE }
